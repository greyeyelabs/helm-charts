name: Publish Helm Chart

on:
  push:
    branches:
      - main
    paths:
      - "charts/**"

jobs:
  publish-helm-chart:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Determine Changed Chart
        id: find-chart
        run: |
          # Fallback to HEAD~1 if github.event.before is unavailable
          BEFORE_COMMIT=${{ github.event.before || 'HEAD~1' }}
          CHANGED_FILES=$(git diff --name-only $BEFORE_COMMIT ${{ github.sha }})

          # Find the first changed chart directory
          for file in $CHANGED_FILES; do
            if [[ $file =~ charts/(applications|utils)/.* ]]; then
              echo "chart_dir=$(dirname $file)" >> $GITHUB_ENV
              break
            fi
          done

          if [ -z "$chart_dir" ]; then
            echo "No changed charts found. Exiting."
            exit 0
          fi


      - name: Package Helm chart
        if: env.chart_dir
        run: |
          helm package $chart_dir -d ./packages

      - name: Publish Helm chart to Gitea
        if: env.chart_dir
        env:
          GITEA_URL: "https://gitea.lab1.nekolabs.cc" # URL of your Gitea server
          GITEA_TOKEN: "${{ secrets.ACT_RUNNER_TOKEN }}" # Gitea Personal Access Token stored as a secret
          GITEA_OWNER: "greyeye"   # Gitea user/org where the package is published
          GITEA_REPO: "helm-charts"           # Gitea repo where the chart is stored
        run: |
          CHART_FILE=$(find ./packages -type f -name "*.tgz")
          if [ -z "$CHART_FILE" ]; then
            echo "Error: No chart package found."
            exit 1
          fi

          RELEASE_TAG="v$(helm show chart $chart_dir | grep version | cut -d ':' -f2 | tr -d ' ')"
          UPLOAD_URL="$GITEA_URL/api/v1/repos/$GITEA_OWNER/$GITEA_REPO/releases"

          # Check if release exists
          RELEASE_EXISTS=$(curl -s -o /dev/null -w "%{http_code}" -H "Authorization: token $GITEA_TOKEN" "$UPLOAD_URL/tags/$RELEASE_TAG")

          if [ "$RELEASE_EXISTS" -ne 200 ]; then
            echo "Creating new release $RELEASE_TAG..."
            curl -s -X POST "$UPLOAD_URL" \
              -H "Authorization: token $GITEA_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{"tag_name": "'$RELEASE_TAG'", "name": "'$PACKAGE_NAME'", "body": "Release for Helm chart version '$RELEASE_TAG'", "draft": false, "prerelease": false}'
          else
            echo "Release $RELEASE_TAG already exists."
          fi

          # Upload the Helm chart
          RELEASE_ID=$(curl -s -H "Authorization: token $GITEA_TOKEN" "$UPLOAD_URL/tags/$RELEASE_TAG" | jq -r '.id')
          if [ -z "$RELEASE_ID" ]; then
            echo "Error: Failed to get release ID."
            exit 1
          fi

          UPLOAD_ASSET_URL="$UPLOAD_URL/$RELEASE_ID/assets?name=$(basename $CHART_FILE)"
          curl -s -X POST "$UPLOAD_ASSET_URL" \
            -H "Authorization: token $GITEA_TOKEN" \
            -H "Content-Type: application/gzip" \
            --data-binary "@$CHART_FILE"

          echo "Helm chart uploaded successfully."
